<?phpnamespace App\Http\Controllers\backend;use App\Http\Controllers\Controller;use App\model\categories;use App\model\subcategories;use Illuminate\Http\Request;class SubcategoryController extends Controller{    public function view()    {        $subcategories = subcategories::with('category')->orderBy('id','desc')->get();        return view('backend.storemanagment.subcategories.subcategory_view', compact('subcategories'));    }    public function add()    {        $categories= categories::orderBy('category_name','ASC')->get();        return view('backend.storemanagment.subcategories.subcategory_add',compact('categories'));    }    public function store(Request $request)    {        $this->validate($request, [            'category' => ['required'],            'subcat_name' => ['required', 'string', 'max:100','unique:subcategories,subcat_name'],            'status' => ['required'],        ]);        $subcat= null;        try {            $subcat_name = $request->subcat_name;            $sub_cat = subcategories::create([                'category_id' => $request->category,                'subcat_name' => $subcat_name,                'subcat_slug' => slugify($subcat_name),                'status' => $request->status,            ]);            if ($request->file('subcat_logo')) {                $file = $request->file('subcat_logo');                @unlink(public_path('upload/store_managment/sub_cat_logo/' . $sub_cat->subcat_logo));                $filename = date('YmdHi') . $file->getClientOriginalName();                $file->move(public_path('upload/store_managment/sub_cat_logo'), $filename);                $sub_cat['subcat_logo'] = $filename;            }            $sub_cat->save();            $subcat = true;        } catch (Exception $exception) {            $subcat = false;        }        if ($subcat == true) {            return redirect()->route('subcategories_view')->with('success', 'Yah ! sub category has been successfully created !');        } else {            return back()->with('error', 'Oops! Unable to create a sub category ');        }    }    public function subCategoryStatus($id, $status)    {        $subCategoryStatus = subcategories::find($id);        $subCategoryStatus->status = $status;        $subCategoryStatus->save();        return response()->json(['message' => 'success']);    }    public function edit($id)    {        $id= base64_decode($id);        $categories= categories::orderBy('category_name','ASC')->get();        $sub_edit = subcategories::find($id);        return view('backend.storemanagment.subcategories.subcategory_edit', compact('sub_edit','categories'));    }    public function update(Request $request , $id)    {        $request->validate([            "subcat_name" => "required| unique:subcategories,subcat_name,".$id,        ]);        $subcategories = subcategories::find($id);        $success= null;        try {            $subcat_name = $request->subcat_name;            $subcategories-> update([                'category_id' => $request->category,                'subcat_name' => $subcat_name,                'subcat_slug' => slugify($subcat_name),                'status' => $request->status,            ]);            if ($request->file('subcat_logo')) {                $file = $request->file('subcat_logo');                @unlink(public_path('upload/store_managment/sub_cat_logo/' . $subcategories->subcat_logo));                $filename = date('YmdHi') . $file->getClientOriginalName();                $file->move(public_path('upload/store_managment/sub_cat_logo'), $filename);                $subcategories['subcat_logo'] = $filename;            }            $subcategories->save();            $success = true;        } catch (Exception $exception) {            $success = false;        }        if ($success === true) {            return redirect()->route('subcategories_view')->with('success', 'Yah ! Sub category has been successfully update !');        } else {            return back()->with('error', 'Oops! Unable to update a Sub category ');        }    }    public function delete($id)    {        $id = base64_decode($id);        $subcategories = subcategories::find($id);        $subcategories->delete();        return redirect()->route('subcategories_view')->with('success', ' sub category has been delete successfully');    }}